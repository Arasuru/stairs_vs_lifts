clearWatch();
digitalWrite(A6,0);//Ground
digitalWrite(A7,1); //Vcc

I2C2.setup({scl:B10 , sda:B3}); //I2C line for acceleration and pressure sensor

Serial1.setup(9600, {tx:B6, rx: B7}); //Serial1 line for ESP32 communication

//var bme = require("BME280").connect(I2C2);
var mpu = require("MPU6050").connect(I2C2);
mpu.initialize();

var accelData = [];
var acc,accelMagnitude,evaluation = -1;

//threshold values
var standing_threshold_deviation = 0.2;
var threshold_deviation = 0.4;
var threshold_count = 12;
var standing_thresholdcount = 19;

setInterval(function() {
    acc = mpu.getAcceleration();//Acceleration data in LSB/g across 3 axis
    var k;
    for(k=0;k<3;k++){
       acc[k] = (acc[k]/16384) * 9.80665;  //LSB/g to m/squared second
    }
    accelMagnitude = Math.sqrt(acc[0]*acc[0] + acc[1]*acc[1] + acc[2]*acc[2]);
    //adding data to the arrays
    accelData.push(accelMagnitude.toFixed(16));
    if(accelData.length == 20){
      evaluation = Evaluate();
      //Serial1.print(evaluation);
      accelData = [];
    }
    if(Serial1.available()){
      Serial1.read();
      Serial1.print(evaluation);
      //console.log("evaluation result: ",evaluation);
    }
}, 200);


function Evaluate(){
  var sum=0,avg, result= -1;
  var lift_count = 0,stairs_count = 0,standing_count = 0;
  for(var i=0;i<20;i++){
    sum = sum + Number(accelData[i]);
  }
  avg = sum/20;
  for(var k=0;k<20;k++){
    if(Math.abs(avg-accelData[k]) < 0.4){
      if(Math.abs(avg-accelData[k]) < 0.2){
        standing_count += 1;
      }
        lift_count +=1;
    }
    else
      stairs_count += 1;
  }
  if(standing_count >= standing_thresholdcount){
    //console.log("You're not moving"); 
    result = 0;
  }
  else if(lift_count >= threshold_count){
    //console.log("You're taking lift");
    result = 1;
  }
  else if(stairs_count >= threshold_count){
    //console.log("You're taking stairs");
    result = 2;
  }
  else{
    //console.log("not sure");
    result = 3;
  }
  return result;
}



//setInterval(getResult,100);
